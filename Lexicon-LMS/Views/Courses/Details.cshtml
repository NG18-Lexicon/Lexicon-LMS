@model Lexicon_LMS.Models.Course
@using Lexicon_LMS.Models;
@{
    ViewBag.CourseCode = Model.CourseCode;

}
<link href="~/Content/icecreamstyle.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
@*jquery and the dropdown doesn't not work together*@
@*@Scripts.Render("~/Scripts/jquery-3.3.1.min.js")
    @Scripts.Render("~/Scripts/bootstrap.min.js")*@

<script>
    window.onload = function () {
        switch (getQueryString("tab")) {
            case "modules":
                document.getElementById("modules-tab").click();
                break;
            case "coursemembers":
                document.getElementById("members-tab").click();
                break;
            default:
                break;
        }
    };
</script>

<p class="text-success">@ViewBag.StatusMessage</p>
<div class="main-div">
    <h2 class="h2-override">@Html.DisplayFor(model => model.CourseName)</h2>
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item active">
            <a class="nav-link active a-override" id="overview-tab" data-toggle="tab" href="#overview" role="tab" aria-controls="overview" aria-selected="true">Overview</a>
        </li>
        <li class="nav-item">
            <a class="nav-link a-override" id="modules-tab" data-toggle="tab" href="#modules" role="tab" aria-controls="modules" aria-selected="false">Modules</a>
        </li>
        <li class="nav-item">
            <a class="nav-link a-override" id="members-tab" data-toggle="tab" href="#coursemembers" role="tab" aria-controls="coursemembers" aria-selected="false">Course members</a>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade active in" id="overview" role="tabpanel" aria-labelledby="overview-tab" ;>
            <br />
            @*
                @if (User.IsInRole("Teacher"))
                {
                    <div class="p-override">
                        <p>
                            @Html.ActionLink("Add Module", "Create", new { Controller = "Modules", action = "Create", id = Model.ID }, new { @class = "btn btn-primary" })
                        </p>
                    </div>
                }
            *@
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.CourseCode)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CourseCode)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CourseName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CourseName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.StartDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.StartDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.EndDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.EndDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.CourseModules)
                </dt>
                <dd>
                    @Html.ViewData.Model.CourseModules.Count
                </dd>
                <dt>
                    Number of @Html.DisplayNameFor(model => model.CourseParticipants)
                </dt>
                <dd>
                    @Html.ViewData.Model.CourseParticipants.Count
                </dd>

                <dt>@Html.DisplayNameFor(model => model.Teacher)</dt>

                <dd>@Html.DisplayFor(model => model.Teacher.FullName)</dd>

                <dt>@Html.DisplayNameFor(model => model.Documents)</dt>
                @if (User.IsInRole("Teacher"))
                {
                    <dd>@Html.Partial("UploadCourseDoc", Model)</dd>
                    <dd>@ViewBag.UploadStatus</dd>
                }
                <dd>
                    @foreach (Document document in Model.Documents)
                    {
                        @Html.ActionLink("Download: " + document.DisplayName, "Download", new { filePath = document.Filepath, fileName = document.FileName }) if (User.IsInRole("Teacher")) {<span> | </span>@Html.ActionLink("Delete", "DeleteDoc", new { id = document.ID })}<br />
                    }
                </dd>
            </dl>
            @if (User.IsInRole("Teacher"))
            {
                <div style="padding-bottom: 10px">
                    <div class="glyph-fix" style="display:inline">
                        <a href="@Url.Action("Index", "Courses", new { id = Model.ID })" class="btn btn-default">
                            <span class="glyphicon glyphicon-arrow-left " aria-hidden="true"></span>
                            Back to Courses
                        </a>
                    </div>
                    <span> | </span>
                    <div style="display:inline;">
                        <a href="@Url.Action("Edit", "Courses", new { id = Model.ID })" class="btn btn-default">
                            <span class="glyphicon glyphicon-pencil " aria-hidden="true"></span>
                            Edit
                        </a>
                    </div>
                </div>
            }
        </div>
        <div class="tab-pane fade" id="modules" role="tabpanel" aria-labelledby="modules-tab">
            @Html.Partial("_ModulesList", Model.CourseModules, new ViewDataDictionary(ViewData) { { "courseID", Model.ID } })
        </div>
        <div class="tab-pane fade" id="coursemembers" role="tabpanel" aria-labelledby="coursemembers-tab">
            @Html.Partial("_CourseMembers", Model.CourseParticipants)
        </div>
    </div>
</div>
@*@Scripts.Render("~/Scripts/activetab.js")*@